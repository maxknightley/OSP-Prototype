[gd_scene load_steps=14 format=2]

[ext_resource path="res://Assets/tilesmall.png" type="Texture" id=1]
[ext_resource path="res://Assets/valid_target.tres" type="Texture" id=2]
[ext_resource path="res://PopupMenuHandler.tscn" type="PackedScene" id=4]
[ext_resource path="res://Assets/valid_target_in_aoe.tres" type="Texture" id=5]
[ext_resource path="res://Assets/indirect_target_in_aoe.tres" type="Texture" id=6]
[ext_resource path="res://Assets/Fonts/Evil_Empire.tres" type="DynamicFont" id=7]
[ext_resource path="res://Assets/hp_missing_texture.png" type="Texture" id=8]
[ext_resource path="res://Assets/hp_present_texture.png" type="Texture" id=9]
[ext_resource path="res://Assets/menu_theme.tres" type="Theme" id=10]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

void vertex() { // The vertex shader function
	// VERTEX.x += 1.0; // This will shift ALL X-VALUES over by 1 pixel
	// VERTEX.x += 100.0; // This will shift ALL X-VALUES over by 100 pixels
	
	// This will multiply ALL X-VALUES by 150%:
	// VERTEX.x *= 1.5;
	// This also stretches out the sprite horizontally, for obvious reasons.
	
	// We need a way to ensure that all x-vertices are multiplied by a factor of Y.
	// THIS will do that, skewing the battlefield horizontally...
	// VERTEX.x += VERTEX.y;
	
	// But we also want the transformation to be *centered horizontally.*
	// The following gets us closer - we get a centered trapezoid - but it looks fucky.
	// The tiles in the middle are wider, while the tiles on the outer edges are narrower.
	/* if(VERTEX.x < 192.0)
		{ VERTEX.x -= 0.1 * VERTEX.y; }
	if(VERTEX.x > 192.0)
		{ VERTEX.x += 0.1 * VERTEX.y; } */
	
	// This probably isn't the best way to do this, but...
	// If we multiply by a greater factor the further we are from the center, we get a centered trapezoid!
	if(VERTEX.x < 64.0)
		{ VERTEX.x -= 0.3 * VERTEX.y; }
	else if(VERTEX.x < 128.0)
		{ VERTEX.x -= 0.2 * VERTEX.y; }
	else if(VERTEX.x < 192.0)
		{ VERTEX.x -= 0.1 * VERTEX.y; }
	else if(VERTEX.x > 320.0)
		{ VERTEX.x += 0.3 * VERTEX.y; }
	else if(VERTEX.x > 256.0)
		{ VERTEX.x += 0.2 * VERTEX.y; }
	else if(VERTEX.x > 192.0)
		{ VERTEX.x += 0.1 * VERTEX.y; }
		
	VERTEX.y = 0.75 * VERTEX.y;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[sub_resource type="TileSet" id=4]
0/name = "tilesmall.png 0"
0/texture = ExtResource( 1 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 64, 64 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "flashing_cursor.tres 1"
1/texture = ExtResource( 2 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 0, 0, 64, 64 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "targeting_cursor.tres 2"
2/texture = ExtResource( 5 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 0, 0, 64, 64 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0
3/name = "indirect_target_in_aoe.tres 3"
3/texture = ExtResource( 6 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 0, 0, 64, 64 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape_one_way = false
3/shape_one_way_margin = 0.0
3/shapes = [  ]
3/z_index = 0

[sub_resource type="Theme" id=5]
default_font = ExtResource( 7 )
Label/colors/font_color = Color( 1, 1, 1, 1 )
Label/colors/font_color_shadow = Color( 0, 0, 0, 1 )
Label/colors/font_outline_modulate = Color( 0, 0, 0, 1 )
Label/constants/line_spacing = 0
Label/constants/shadow_as_outline = 0
Label/constants/shadow_offset_x = 0
Label/constants/shadow_offset_y = 0
Label/fonts/font = ExtResource( 7 )
Label/styles/normal = null
TabContainer/constants/label_valign_bg = 0
TabContainer/constants/label_valign_fg = 0

[node name="Battlefield" type="TileMap"]
material = SubResource( 3 )
z_index = -2
mode = 2
tile_set = SubResource( 4 )
cell_custom_transform = Transform2D( 64, 0, 0, 64, 320, 320 )
format = 1
tile_data = PoolIntArray( 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0, 65540, 0, 0, 65541, 0, 0, 131072, 0, 0, 131073, 0, 0, 131074, 0, 0, 131075, 0, 0, 131076, 0, 0, 131077, 0, 0, 196608, 0, 0, 196609, 0, 0, 196610, 0, 0, 196611, 0, 0, 196612, 0, 0, 196613, 0, 0, 262144, 0, 0, 262145, 0, 0, 262146, 0, 0, 262147, 0, 0, 262148, 0, 0, 262149, 0, 0, 327680, 0, 0, 327681, 0, 0, 327682, 0, 0, 327683, 0, 0, 327684, 0, 0, 327685, 0, 0 )

[node name="MovementCooldown" type="Timer" parent="."]
wait_time = 0.28
one_shot = true

[node name="PopupMenuHandler" parent="." instance=ExtResource( 4 )]

[node name="HPMeter" type="TextureProgress" parent="."]
margin_left = 825.0
margin_top = 705.0
margin_right = 1023.0
margin_bottom = 767.0
step = 0.01
rounded = true
texture_under = ExtResource( 8 )
texture_progress = ExtResource( 9 )
nine_patch_stretch = true

[node name="HPMeterText" type="Label" parent="."]
margin_left = 859.0
margin_top = 716.0
margin_right = 999.0
margin_bottom = 754.0
theme = ExtResource( 10 )
text = "foo / bar"
align = 1
valign = 1

[node name="ActiveCharacterName" type="Label" parent="."]
margin_left = 828.0
margin_top = 657.0
margin_right = 1005.0
margin_bottom = 698.0
theme = SubResource( 5 )
text = "EX_CHAR"
align = 2
valign = 2

[connection signal="timeout" from="MovementCooldown" to="." method="_on_MovementCooldown_timeout"]
